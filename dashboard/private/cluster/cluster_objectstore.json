{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.1.2"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph (old)",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1646869253298,
  "links": [
    {
      "$$hashKey": "object:704",
      "icon": "dashboard",
      "tags": [],
      "title": "Ceph Telemetry",
      "tooltip": "",
      "type": "link",
      "url": "/d/-GcbjrXZz/telemetry?orgId=1"
    }
  ],
  "panels": [
    {
      "datasource": null,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": null,
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 1
              },
              {
                "color": "#6ED0E0",
                "value": 2
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "version"
            },
            "properties": [
              {
                "id": "custom.align",
                "value": "left"
              },
              {
                "id": "custom.width",
                "value": 128
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "osds"
            },
            "properties": [
              {
                "id": "unit",
                "value": "locale"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 44,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n        CASE\n            WHEN '$display' = 'Major' then\n              SPLIT_PART(md_ver.value, '.', 1)\n            else md_ver.value\n        end as version,\n        md_obj.value objectstore,\n--        ARRAY_POSITION(Array['filestore', 'bluestore', 'memstore'], md_obj.value::text) color,\n        sum(md_ver.total) OSDs\nfrom\n        grafana.weekly_reports_sliding w\ninner join\n        grafana.metadata md_ver\n        on w.report_id = md_ver.report_id and md_ver.attr = 'ceph_version_norm' AND md_ver.entity = 'osd'\ninner join\n        grafana.metadata md_obj\n        on w.report_id = md_obj.report_id and md_obj.attr = 'osd_objectstore'\nwhere \n    w.DAILY_WINDOW BETWEEN $__timeTo()::timestamp - interval '1 day' AND $__timeTo()::timestamp\n    and case when '$display'='Major' then\n            SPLIT_PART(md_ver.value, '.', 1)\n          else md_ver.value end\n          in\n          (select unnest(case when '$display'='Major' then Array[$major]\n    else Array[$minor] end))\n--    and entity in ($daemons)\ngroup by 1, md_obj.value\norder by 1;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "OSD count  by objectstore and version for  ${__to:date:YYYY-MM-DD}",
      "type": "table"
    },
    {
      "datasource": null,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": null,
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "version"
            },
            "properties": [
              {
                "id": "custom.align",
                "value": "left"
              },
              {
                "id": "custom.width",
                "value": 128
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "osds"
            },
            "properties": [
              {
                "id": "unit",
                "value": "locale"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 45,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\nWITH\n-- Get the matching metadata stats, per the above report (latest, weekly)\nweekly_metadata AS (\n  SELECT\n    daily_window, grafana.metadata.*\n  FROM\n    grafana.metadata\n  INNER JOIN\n    grafana.WEEKLY_REPORTS_SLIDING w ON w.report_id = grafana.metadata.report_id\n  WHERE\n    attr='ceph_version_norm'\n),\n-- This retrieves total daemons per report (which is of a cluster, per week)\nweekly_cluster_daemons AS ( \n  SELECT report_id, sum(total) sum_daemons\n  FROM grafana.metadata\n  WHERE attr='ceph_version_norm'\n  AND entity = 'osd'\n  GROUP BY report_id\n)\nselect\n  -- daily_window as time, \n  CASE\n \tWHEN '$display' = 'Major' then\n          SPLIT_PART(wm.value, '.', 1)\n    ELSE wm.value\n  END as version,\n  --wm.value as metric,\n  md_obj.value as objectstore,\n  -- Sum the OSDs (attr='ceph_version_norm') total' and not the objectstore (attr='osd_objectstore') 'total' \n  sum(wm.total / CAST(cd.sum_daemons AS real)) as clusters\nfrom weekly_metadata wm\ninner join weekly_cluster_daemons cd \nON wm.report_id = cd.report_id\nINNER JOIN grafana.metadata md_obj ON md_obj.report_id = wm.report_id \nwhere $__timeFilter(daily_window)\nAND md_obj.attr = 'osd_objectstore'\nand case when '$display'='Major' then\n            SPLIT_PART(wm.value, '.', 1)\n          else wm.value end\n          in\n          (select unnest(case when '$display'='Major' then Array[$major]\nelse Array[$minor] end))\n-- and value in ($minor) \nand wm.entity = 'osd'\nAND daily_window BETWEEN $__timeTo()::timestamp - interval '1 day' AND $__timeTo()::timestamp\nGROUP by daily_window, 1, md_obj.value\norder by 1, daily_window;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Cluster count by version and objectstore for  ${__to:date:YYYY-MM-DD}",
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_POSTGRESQL}",
      "description": "",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 39,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.1.2",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n\t--*\n\tw.DAILY_WINDOW as time,\n\tcount(*) \"Active clusters\"\n\t--count(distinct(cluster_id))\n\t--w.DAILY_WINDOW,\n\t--w.report_id--,\n\t--percentile_cont(0.5) within group (order by num_images) as med,\n\t--round(avg(c.num_images)) as avg,\n\t--count(c.num_images),\n\t--count(c.pool_idx),\n\t--sum(c.num_images) as total_images_per_cluster--,\n\t--max(c.num_images)\n\t--count(distinct(cluster_id))\nfrom\n\tgrafana.WEEKLY_REPORTS_SLIDING w\ninner join \n\tgrafana.ts_cluster c\n\t--grafana.rbd_pool c -- 'c' for cluster\non\n\tw.REPORT_ID = c.REPORT_ID\nWHERE\n  $__timeFilter(w.DAILY_WINDOW)\nGROUP BY w.daily_window--, w.report_id\norder by\n\tw.DAILY_WINDOW;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n\t--*\n\tw.DAILY_WINDOW as time,\n\tcount(*) \"Active clusters reporting objectstore\"\n\t--count(distinct(cluster_id))\n\t--w.DAILY_WINDOW,\n\t--w.report_id--,\n\t--percentile_cont(0.5) within group (order by num_images) as med,\n\t--round(avg(c.num_images)) as avg,\n\t--count(c.num_images),\n\t--count(c.pool_idx),\n\t--sum(c.num_images) as total_images_per_cluster--,\n\t--max(c.num_images)\n\t--count(distinct(cluster_id))\nfrom\n\tgrafana.WEEKLY_REPORTS_SLIDING w\ninner join \n\tgrafana.metadata md\n\t--grafana.rbd_pool c -- 'c' for cluster\non\n\tw.REPORT_ID = md.REPORT_ID\nWHERE\n  $__timeFilter(w.DAILY_WINDOW)\nAND\n  md.attr = 'osd_objectstore'\nGROUP BY w.daily_window--, w.report_id\norder by\n\tw.DAILY_WINDOW;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Active clusters",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:242",
          "format": "locale",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:243",
          "format": "locale",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_POSTGRESQL}",
      "description": "",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 41,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.1.2",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  $__timeGroup(w.DAILY_WINDOW, '1d', 0),\n  sum(md.total) as value,\n  value as metric\nfrom\n\tgrafana.WEEKLY_REPORTS_SLIDING w\ninner join \n\tgrafana.metadata md \non\n\tw.REPORT_ID = md.REPORT_ID\nWHERE\n--  $__timeFilter(w.DAILY_WINDOW)\n  w.DAILY_WINDOW BETWEEN $__timeFrom()::timestamp - interval '1 day' AND $__timeTo()\n  AND md.attr = 'osd_objectstore'\nGROUP BY w.daily_window, md.value\norder by\n\tw.DAILY_WINDOW;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "OSD count by objectstore across all versions",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:242",
          "format": "locale",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:243",
          "format": "locale",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_POSTGRESQL}",
      "description": "",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "hiddenSeries": false,
      "id": 42,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.1.2",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "--select\n--  $__timeGroup(w.DAILY_WINDOW, '1d', 0),\nwith mixed as (\n  SELECT md.report_id, wrs.daily_window, count(distinct(value)) val\n  FROM grafana.metadata md\n  INNER JOIN grafana.weekly_reports_sliding wrs ON md.report_id = wrs.report_id\n  WHERE\n  \t$__timeFilter(wrs.daily_window)\n  \tAND md.attr = 'osd_objectstore'\n  GROUP BY md.report_id, wrs.daily_window \n  HAVING count(distinct(value)) > 1  \n)\nselect daily_window as time, count(*) from mixed\nGROUP BY daily_window \nORDER BY daily_window \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Clusters with multiple objectstore types",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:242",
          "format": "locale",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:243",
          "format": "locale",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_POSTGRESQL}",
      "description": "",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "hiddenSeries": false,
      "id": 47,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.1.2",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with\n -- extract number of bluestore OSDs per day\nmd_bs AS (\n\tselect\n\t\t-- $__timeGroup(w.DAILY_WINDOW, '1d', 0),\n \t\tw.DAILY_WINDOW,\n  \t\tsum(md.total) as value\n\tfrom\n\t\tgrafana.WEEKLY_REPORTS_SLIDING w\n\tinner join \n\t\tgrafana.metadata md \n\ton\n\t\tw.REPORT_ID = md.REPORT_ID\n\tWHERE attr='osd_objectstore' AND value = 'bluestore'\n\tGROUP BY w.DAILY_WINDOW\n),\nmd_fs AS (\n\tselect\n\t\t-- $__timeGroup(w.DAILY_WINDOW, '1d', 0),\n\t\tw.DAILY_WINDOW,\n\t\tsum(md.total) as value\n\tfrom\n\t\tgrafana.WEEKLY_REPORTS_SLIDING w\n\tinner join \n\t\tgrafana.metadata md \n\ton\n\t\tw.REPORT_ID = md.REPORT_ID\n\tWHERE attr='osd_objectstore' AND value = 'filestore'\n\tGROUP BY w.DAILY_WINDOW\n)\nselect\n  $__timeGroup(md_fs.DAILY_WINDOW, '1d', 0),\n  md_fs.value::real / md_bs.value ratio\nfrom md_fs\ninner join md_bs on md_fs.DAILY_WINDOW = md_bs.DAILY_WINDOW\nwhere md_fs.DAILY_WINDOW BETWEEN $__timeFrom()::timestamp - interval '1 day' AND $__timeTo()\norder by md_fs.DAILY_WINDOW",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "OSD filestore/bluestore ratio",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:242",
          "format": "locale",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:243",
          "format": "locale",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "14 bluestore": "green"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "decimals": null,
      "description": "Takes the latest report of each cluster per week, and counts the versions by daemons. Displays only the checked options from 'Major' or 'Minor' dropdowns on the top left corner of this page.",
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "12"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Luminous"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "13"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mimic"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "14"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Nautilus"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "15"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Octopus"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "16"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Pacific"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "17"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Quincy"
              }
            ]
          }
        ]
      },
      "fill": 6,
      "fillGradient": 0,
      "gridPos": {
        "h": 18,
        "w": 24,
        "x": 0,
        "y": 32
      },
      "hiddenSeries": false,
      "id": 26,
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null as zero",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.1.2",
      "pointradius": 0.5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "$$hashKey": "object:137"
        }
      ],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select  $__timeGroup(w.daily_window, '1d', 0),\n        CASE\n            WHEN '$display' = 'Major' then\n              concat(SPLIT_PART(md_ver.value, '.', 1), ' ', md_obj.value) \n            else concat(md_ver.value, ' ', md_obj.value)\n        end as metric,\n        sum(md_ver.total)\nfrom\n        grafana.weekly_reports_sliding w\ninner join\n        grafana.metadata md_ver\n        on w.report_id = md_ver.report_id and md_ver.attr = 'ceph_version_norm' AND md_ver.entity = 'osd'\ninner join\n        grafana.metadata md_obj\n        on w.report_id = md_obj.report_id and md_obj.attr = 'osd_objectstore'\nwhere \n    w.DAILY_WINDOW BETWEEN $__timeFrom()::timestamp - interval '1 day' AND $__timeTo()\n    and case when '$display'='Major' then\n            SPLIT_PART(md_ver.value, '.', 1)\n          else md_ver.value end\n          in\n          (select unnest(case when '$display'='Major' then Array[$major]\n    else Array[$minor] end))\n--    and entity in ($daemons)\ngroup by w.daily_window, 2, md_obj.value\norder by 2, w.daily_window;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "OSD count by objectstore and version",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:306",
          "decimals": null,
          "format": "locale",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:307",
          "decimals": null,
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 30,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "Major",
          "value": "Major"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Display by",
        "multi": false,
        "name": "display",
        "options": [
          {
            "selected": true,
            "text": "Major",
            "value": "Major"
          },
          {
            "selected": false,
            "text": "Minor",
            "value": "Minor"
          }
        ],
        "query": "Major,Minor",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_POSTGRESQL}",
        "definition": "select\n  replace(concat(version, '  --  ', name), 'Dev  --  ', 'Dev') as __text,\n  version as __value\nfrom grafana.version_to_name;",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Major",
        "multi": true,
        "name": "major",
        "options": [],
        "query": "select\n  replace(concat(version, '  --  ', name), 'Dev  --  ', 'Dev') as __text,\n  version as __value\nfrom grafana.version_to_name;",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_POSTGRESQL}",
        "definition": "/*select\n\tdistinct(SPLIT_PART(value, '.', '1')) major\nfrom\n\tgrafana.metadata\nwhere\n\tattr='ceph_version_norm'\norder BY\n\tmajor;\n*/\n\nselect\n        distinct(value)\nfrom\n\tgrafana.metadata\nwhere\n\tattr='ceph_version_norm'\nand\n      SPLIT_PART(value, '.', '1') in ($major);\n",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Minor",
        "multi": true,
        "name": "minor",
        "options": [],
        "query": "/*select\n\tdistinct(SPLIT_PART(value, '.', '1')) major\nfrom\n\tgrafana.metadata\nwhere\n\tattr='ceph_version_norm'\norder BY\n\tmajor;\n*/\n\nselect\n        distinct(value)\nfrom\n\tgrafana.metadata\nwhere\n\tattr='ceph_version_norm'\nand\n      SPLIT_PART(value, '.', '1') in ($major);\n",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6M",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Objectstore",
  "uid": "YxQPMg3Mk",
  "version": 5
}